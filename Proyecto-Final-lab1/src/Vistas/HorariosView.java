/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.HorarioData;
import AccesoADatos.RutaData;
import Entidades.Horario;
import Entidades.Ruta;
import java.awt.Component;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author emanu
 */
public class HorariosView extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modeloRutas;
    private DefaultTableModel modeloHorarios;
    
    private List<Ruta> rutas;
    private Ruta ruta;
    private RutaData rutData;
    
    private Horario hor;
    private HorarioData horData;
    private List<Horario> listaHorarios;
    
    public HorariosView() {
        initComponents();
        
        modeloRutas = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
             
        };
        
        modeloHorarios = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column==1;
            }
             
        };
        
        rutas = new  ArrayList<>();
        rutData = new RutaData();
        
        horData = new  HorarioData();
        
        
        armarCabeceraTablaRutas();
        armarCabeceraTablaHorarios();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jtHorarios = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRutas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jtLlegada = new javax.swing.JTextField();
        jlHorarioSalida = new javax.swing.JLabel();
        jtSalida = new javax.swing.JTextField();
        jlHorarioLLegada = new javax.swing.JLabel();
        jbGuardar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jtOrigen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jtHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtHorarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtHorariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtHorarios);

        jtRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtRutas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtRutasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtRutas);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setText("Horarios cargados ");

        jtLlegada.setEditable(false);
        jtLlegada.setEnabled(false);
        jtLlegada.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jtLlegadaComponentAdded(evt);
            }
        });

        jlHorarioSalida.setText("Ingrese Horario de Salida:");
        jlHorarioSalida.setEnabled(false);

        jtSalida.setEnabled(false);
        jtSalida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtSalidaFocusLost(evt);
            }
        });
        jtSalida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtSalidaKeyReleased(evt);
            }
        });

        jlHorarioLLegada.setText("Horario de Llegada:");
        jlHorarioLLegada.setEnabled(false);

        jbGuardar.setText("Guardar");
        jbGuardar.setEnabled(false);
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlHorarioLLegada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlHorarioSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlHorarioSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlHorarioLLegada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jbGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar");
        jbModificar.setEnabled(false);
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.setEnabled(false);
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jtOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtOrigenKeyReleased(evt);
            }
        });

        jLabel4.setText("Ingrese Origen :");

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel2.setText("Carga de Horarios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 48, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(153, 153, 153)
                                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(160, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(555, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtOrigenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtOrigenKeyReleased
      
        borrarFilas(modeloRutas);
        
        String origen = jtOrigen.getText().toLowerCase();
        rutas = rutData.buscarRutas(origen, "");
        
        cargarRutas(rutas);
        jtRutas.setEnabled(true);
    }//GEN-LAST:event_jtOrigenKeyReleased

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtRutasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtRutasMouseClicked
       
        jbEliminar.setEnabled(false);
        jbModificar.setEnabled(false);
                
        activarPanel(true);
        
        jtSalida.setText("");
        jtLlegada.setText("");
        
        borrarFilas(modeloHorarios);
        cargarHorarios();
        
    }//GEN-LAST:event_jtRutasMouseClicked

    private void jtSalidaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtSalidaFocusLost
        jbGuardar.setEnabled(true);
        
        int filaSelecionada = jtRutas.getSelectedRow();
        if (filaSelecionada != -1) {
        if (!jtSalida.getText().isEmpty()) {
    
        String str = jtSalida.getText();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        LocalTime horaSalida = LocalTime.parse(str, formatter);

        LocalTime horaLlegada = (LocalTime) jtRutas.getValueAt(filaSelecionada, 2);

        LocalTime resultado = horaSalida.plusHours(horaLlegada.getHour())
                .plusMinutes(horaLlegada.getMinute());

        jtLlegada.setText(resultado.toString());
   
}
        }
        
        
        
    }//GEN-LAST:event_jtSalidaFocusLost

    private void jtSalidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtSalidaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtSalidaKeyReleased

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
       
        int filaSelecionada = jtRutas.getSelectedRow();
        if (filaSelecionada != -1) {

            Object valorCelda = modeloRutas.getValueAt(filaSelecionada, 0);
            int idRuta = Integer.parseInt(valorCelda.toString());

            ruta = rutData.buscarRutaPorId(idRuta);
            
                
                if (!jtSalida.getText().isEmpty()) {
                
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
                LocalTime horaSalida = LocalTime.parse(jtSalida.getText(), formatter);
                LocalTime horaLlegada = LocalTime.parse(jtLlegada.getText(), formatter);

                hor = new Horario(ruta, horaSalida, horaLlegada, true);

                horData.agregarHorario(hor);
                }
                
          
          
          
          
        }


    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtHorariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtHorariosMouseClicked

        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        
        activarPanel(false);
        
        
        
    }//GEN-LAST:event_jtHorariosMouseClicked

    private void jtLlegadaComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jtLlegadaComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLlegadaComponentAdded

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
    
        int filaSeleccionada = jtHorarios.getSelectedRow();
        
        if (filaSeleccionada!=-1) {
        
        Object valorCelda = modeloHorarios.getValueAt(filaSeleccionada, 0);
        int idHorario = Integer.parseInt(valorCelda.toString());
        
        horData.eliminarHorario(idHorario);
        
        }
        
        
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
      
        int fsRuta = jtRutas.getSelectedRow();
        int fsHora = jtHorarios.getSelectedRow();
        if (fsHora != -1 && fsRuta!=-1) {
        
            
        Object valorCeldaH = modeloHorarios.getValueAt(fsHora, 0);
        int idHora = Integer.parseInt(valorCeldaH.toString());    
            
        Object valorCeldaR = modeloRutas.getValueAt(fsRuta, 0);
        int idRuta = Integer.parseInt(valorCeldaR.toString());
   
        Ruta rtaSelec = rutData.buscarRutaPorId(idRuta);
        
        LocalTime horaSalida=null;
        LocalTime resultado=null;
        
        try {
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
                    Object valorHora = jtHorarios.getValueAt(fsHora, 0);       
                    String hs = valorHora.toString();
                    horaSalida = LocalTime.parse(hs,formatter);
                   
                    LocalTime horaLlegada = (LocalTime) jtRutas.getValueAt(fsRuta, 2);
                    
                    resultado = horaSalida.plusHours(horaLlegada.getHour())
                    .plusMinutes(horaLlegada.getMinute());
                    
                } catch (DateTimeParseException ex) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar la duracion estimada de la forma hh:mm");
                    return;
                }
        
        hor = new Horario(idHora, rtaSelec, horaSalida, resultado, true);
        
        horData.modificarHorario(hor);
        
        }
    }//GEN-LAST:event_jbModificarActionPerformed


    private void armarCabeceraTablaRutas() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("Identificador");
        filaCabecera.add("Origen");
        filaCabecera.add("Destino");
        filaCabecera.add("Duracion Estimada");

        for (Object it : filaCabecera) {
            modeloRutas.addColumn(it);
        }
        jtRutas.setModel(modeloRutas);
        
        TableColumnModel columnModel = jtRutas.getColumnModel();
        TableColumn column = columnModel.getColumn(0);
        jtRutas.removeColumn(column);
    }
    
    private void armarCabeceraTablaHorarios() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("id_Horario");
        filaCabecera.add("Hora Salida");
        filaCabecera.add("Hora Llegada");
        

        for (Object it : filaCabecera) {
            modeloHorarios.addColumn(it);
        }
        jtHorarios.setModel(modeloHorarios);
        
        TableColumnModel columnModel = jtHorarios.getColumnModel();
        TableColumn column = columnModel.getColumn(0);
        jtHorarios.removeColumn(column);
    }

    private void borrarFilas(DefaultTableModel modelo) {
        int indice = modelo.getRowCount() - 1;

        for (int i = indice; i >= 0; i--) {
            modelo.removeRow(i);
        }

    }
    
    private void cargarRutas(List<Ruta> rutas) {

        for (Ruta rut : rutas) {
            modeloRutas.addRow(new Object[]{rut.getIdRuta(),rut.getOrigen(),rut.getDestino(),rut.getDuracionEstimada()});
        }

    }
    private void activarPanel(boolean sino){
        
    jtLlegada.setEnabled(sino);
    jtSalida.setEnabled(sino);
    jlHorarioLLegada.setEnabled(sino);
    jlHorarioSalida.setEnabled(sino);
    
    
    }
    
    private void cargarHorarios() {
       
        int filaSeleccionada = jtRutas.getSelectedRow();
        
        if (filaSeleccionada!=-1) {
            
        Object valorCelda = modeloRutas.getValueAt(filaSeleccionada, 0);
        int idRuta = Integer.parseInt(valorCelda.toString());
        
        Ruta rtaSelec = rutData.buscarRutaPorId(idRuta);

        listaHorarios = horData.obtenerHorariosActivos(rtaSelec.getIdRuta());

        for (Horario hora : listaHorarios) {
            modeloHorarios.addRow(new Object[]{hora.getIdHorario(),hora.getHoraSalida(), hora.getHoraLlegada()});
        }
        }
        

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JLabel jlHorarioLLegada;
    private javax.swing.JLabel jlHorarioSalida;
    private javax.swing.JTable jtHorarios;
    private javax.swing.JTextField jtLlegada;
    private javax.swing.JTextField jtOrigen;
    private javax.swing.JTable jtRutas;
    private javax.swing.JTextField jtSalida;
    // End of variables declaration//GEN-END:variables
}
