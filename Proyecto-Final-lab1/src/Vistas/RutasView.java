/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.RutaData;

import Entidades.Ruta;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;


public class RutasView extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    private List<Ruta> rutas;
    private Ruta ruta;
    private RutaData rutData;
    
    public RutasView() {
        initComponents();
        
        modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                    return true;   
            }
        };
      
        rutas = new ArrayList<>();
        rutData = new RutaData();
        
        armarCabeceraTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtOrigen = new javax.swing.JTextField();
        jtDestino = new javax.swing.JTextField();
        jtDuracionEstimada = new javax.swing.JTextField();
        jbModificar = new javax.swing.JButton();
        jbEliminarRuta = new javax.swing.JButton();
        jbGuardarRuta = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRutas = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setText("Carga de Rutas");

        jLabel2.setText("Ingrese Origen :");

        jLabel3.setText("Ingrese Destino");

        jLabel4.setText("Ingrese Duracion Estimada : ");

        jtOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtOrigenKeyReleased(evt);
            }
        });

        jtDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtDestinoKeyReleased(evt);
            }
        });

        jtDuracionEstimada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtDuracionEstimadaFocusGained(evt);
            }
        });
        jtDuracionEstimada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDuracionEstimadaActionPerformed(evt);
            }
        });

        jbModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icons8-editar-propiedad-48.png"))); // NOI18N
        jbModificar.setText("Modificar");
        jbModificar.setEnabled(false);
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminarRuta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icons8-eliminar-papelera-48_1.png"))); // NOI18N
        jbEliminarRuta.setText("Eliminar");
        jbEliminarRuta.setEnabled(false);
        jbEliminarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarRutaActionPerformed(evt);
            }
        });

        jbGuardarRuta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icons8-hoja-48.png"))); // NOI18N
        jbGuardarRuta.setText("Guardar");
        jbGuardarRuta.setEnabled(false);
        jbGuardarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarRutaActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icons8-salida-de-emergencia-48.png"))); // NOI18N
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jtRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtRutas.setEnabled(false);
        jtRutas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtRutasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtRutas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEliminarRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbGuardarRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDuracionEstimada, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtOrigen)
                                .addComponent(jtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtDuracionEstimada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jbEliminarRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jbGuardarRuta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jbGuardarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarRutaActionPerformed
        
        if (!jtDestino.getText().isEmpty() && !jtOrigen.getText().isEmpty() 
                && !jtDuracionEstimada.getText().isEmpty()) {

            try {
                String origen = jtOrigen.getText();
                String destino = jtDestino.getText();
                String str = jtDuracionEstimada.getText();

                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");

                LocalTime duracionEstimada = LocalTime.parse(str, formatter);

                Ruta ruta = new Ruta(origen, destino, duracionEstimada, true);

                //controlar que no ingrese 2 rutas con mismo origen y destino
                boolean esta = false;
                for (Ruta rut : rutas) {
                    if (rut.getDestino().equalsIgnoreCase(ruta.getDestino())
                            && rut.getOrigen().equalsIgnoreCase(ruta.getOrigen())) {
                        esta = true;
                        
                    }
                }

                if (esta) {
                    JOptionPane.showMessageDialog(null, 
                   "No puede ingresar 2 rutas con origen y destino iguales");
                    return;
                } else {
                    rutData.agregarRuta(ruta);
                }

            } catch (DateTimeParseException ex) {

                JOptionPane.showMessageDialog(null, "Debe ingresar la duracion estimada de la forma hh:mm");
                jtDuracionEstimada.setText("");
                return;
            }

            limpiarCampos();

        } else {
            JOptionPane.showMessageDialog(null, "No pueden existir campos vacios");
            return;
        }

    }//GEN-LAST:event_jbGuardarRutaActionPerformed

    private void jtDuracionEstimadaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtDuracionEstimadaFocusGained
      jbGuardarRuta.setEnabled(true);
    }//GEN-LAST:event_jtDuracionEstimadaFocusGained

    private void jtRutasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtRutasMouseClicked
      
        jbModificar.setEnabled(true);
        jbEliminarRuta.setEnabled(true);
        
    }//GEN-LAST:event_jtRutasMouseClicked

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
  
       int filaSelecionada = jtRutas.getSelectedRow();
        if (filaSelecionada!=-1) {
            
            Object idRutaSeleccioada = jtRutas.getModel().getValueAt(filaSelecionada, 0);
            int idRuta = (int) idRutaSeleccioada;
            
            String origen = (String) jtRutas.getValueAt(filaSelecionada, 0);
            String destino = (String) jtRutas.getValueAt(filaSelecionada, 1);
            
            LocalTime duracionEstimada=null;
            try {
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
                    Object horaSeleccionada = jtRutas.getValueAt(filaSelecionada, 2);
                    String hora = horaSeleccionada.toString();
                    duracionEstimada = LocalTime.parse(hora,formatter);
        
                } catch (DateTimeParseException ex) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar la duracion estimada de la forma hh:mm");
                    return;
                }
            
        
        ruta = new Ruta(idRuta, origen, destino, duracionEstimada, true);
        
        rutData.modificarRuta(ruta);
            
        }
       
    limpiarCampos();
    borrarFilas();
    jbModificar.setEnabled(false);
    jbEliminarRuta.setEnabled(false);
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jtOrigenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtOrigenKeyReleased

        borrarFilas();
        
        String origen = jtOrigen.getText().toLowerCase();
        rutas = rutData.buscarRutas(origen, "");
        
        cargarRutas(rutas);
        jtRutas.setEnabled(true);

    }//GEN-LAST:event_jtOrigenKeyReleased

    private void jtDestinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDestinoKeyReleased
     
        borrarFilas();
        
        String destino = jtDestino.getText().toLowerCase();
        rutas = rutData.buscarRutas("", destino);
        
        cargarRutas(rutas);
                            
    }//GEN-LAST:event_jtDestinoKeyReleased

    private void jbEliminarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarRutaActionPerformed
        
        int filaSelecionada = jtRutas.getSelectedRow();
        if (filaSelecionada!=-1) {
            
            String origen  =   (String) jtRutas.getValueAt(filaSelecionada, 0);
            String destino  =   (String) jtRutas.getValueAt(filaSelecionada, 1);
            
            Object idRutaSeleccioada = jtRutas.getModel().getValueAt(filaSelecionada, 0);
            int idRuta = (int) idRutaSeleccioada;
            
            ruta = rutData.buscarRutaPorId(idRuta);
            
            rutData.eliminarRuta(ruta.getIdRuta());
            
        }
        
        borrarFilas();
    }//GEN-LAST:event_jbEliminarRutaActionPerformed

    private void jtDuracionEstimadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDuracionEstimadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtDuracionEstimadaActionPerformed
    
    private void armarCabeceraTabla() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID_Ruta");
        filaCabecera.add("Origen");
        filaCabecera.add("Destino");
        filaCabecera.add("Duracion Estimada");

        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jtRutas.setModel(modelo);
        
        TableColumnModel columnModel = jtRutas.getColumnModel();
        TableColumn column = columnModel.getColumn(0);
        jtRutas.removeColumn(column);

    }

    private void borrarFilas() {
        int indice = modelo.getRowCount() - 1;

        for (int i = indice; i >= 0; i--) {
            modelo.removeRow(i);
        }

    }
    
    private void cargarRutas(List<Ruta> rutas) {

        for (Ruta rut : rutas) {
            modelo.addRow(new Object[]{rut.getIdRuta(),rut.getOrigen(),rut.getDestino(),rut.getDuracionEstimada()});
            
        }

    }

    private void limpiarCampos(){
        
        jtOrigen.setText("");
        jtDestino.setText("");
        jtDuracionEstimada.setText("");
        jbGuardarRuta.setEnabled(false);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEliminarRuta;
    private javax.swing.JButton jbGuardarRuta;
    private javax.swing.JButton jbModificar;
    private javax.swing.JTextField jtDestino;
    private javax.swing.JTextField jtDuracionEstimada;
    private javax.swing.JTextField jtOrigen;
    private javax.swing.JTable jtRutas;
    // End of variables declaration//GEN-END:variables
}
